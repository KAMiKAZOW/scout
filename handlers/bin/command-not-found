#!/usr/bin/python

EX_NOTFOUND = 127
INSTALL_CMD = "sudo zypper install"

import sys
import rpm
import scout

default_lang = scout.DefaultLang(textdomain="command-not-found")
default_lang.install()

def print_found(rows):
    print
    print _("The program '%s' can be found in the following package(s):") % term
    for row in rows:
        print _("  * %s [ path: %s/%s, repository: %s ]") % (row[3], row[2], row[1], row[0])
    print
    print _('Try:'), INSTALL_CMD,
    if len(rows) > 1:
        print _('<selected_package>')
    else:
        print rows[0][3]
    print
    sys.exit(EX_NOTFOUND)

def print_installed(term, pkg, path):
    print
    print _("Program '%s' is present in package '%s', which is installed on your system.") % ( term, pkg )
    print
    if '/sbin' in path:
        print _("Absolute path to '%s' is '%s/%s', so it might be intended to be run only by user with superuser privileges (eg. root).") % ( term , path, term )
    else:
        print _("Absolute path to '%s' is '%s/%s'. Please check your $PATH variable to see whether it contains the mentioned path.") % ( term , path , term )
    print
    sys.exit(EX_NOTFOUND)

def check_installed(term):
    ts = rpm.TransactionSet()
    mi = ts.dbMatch('name', term)
    return mi.count() > 0

if len(sys.argv) < 3:
    sys.exit(EX_NOTFOUND)

sys.path.append(scout.Config.module_path)
import bin

try:
    term = sys.argv[1]
    repo = sys.argv[2]
    if repo == 'zypp':
        rows = bin.ScoutModule.query_zypp(term)
    else:
        rows = bin.ScoutModule.query_repo(repo, term)

    if rows == None or len(rows) == 0:
        sys.exit(EX_NOTFOUND)

    for row in rows:
        if check_installed(row[3]):
            print_installed(term, row[3], row[2])

    print_found(rows)
except:
    print

sys.exit(EX_NOTFOUND)
